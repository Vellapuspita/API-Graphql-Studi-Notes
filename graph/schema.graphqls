scalar Time

type Query {
  studyNotes: [StudyNote!]!
  studyNote(id: ID!): StudyNote
  me: User  
  topics: [Topic!]!
  topic(id: ID!): Topic
}

type Mutation {
  register(input: RegisterInput!): AuthResponse!
  login(email: String!, password: String!): AuthResponse!
  createTopic(input: NewTopicInput!): Topic!
  updateTopic(id: ID!, input: UpdateTopicInput!): Topic!
  deleteTopic(id: ID!): Boolean!
  createStudyNote(input: CreateStudyNoteInput!): StudyNote!
  updateStudyNote(id: ID!, input: UpdateStudyNoteInput!): StudyNote!
  deleteStudyNote(id: ID!): Boolean!
}

type User {
  id: ID!
  name: String!
  email: String!
}

type Topic {
  id: ID!
  topics: String!
}

type StudyNote {
  id: ID!
  id_users: Int!
  id_topics: Int!
  judul: String!
  created_by: Int!
  is_grup: Boolean!
  deskripsi: String
  content: String
  created_at: Time!
  updated_at: Time!
  users: [User!]! # kolaborator
}

input RegisterInput {
  name: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input NewTopicInput {
  topics: String!
}

input UpdateTopicInput {
  topics: String!
}

input CreateStudyNoteInput {
  id_users: Int!
  id_topics: Int!
  judul: String!
  created_by: Int!
  is_grup: Boolean!
  deskripsi: String
  content: String
}

input UpdateStudyNoteInput {
  id_users: Int
  id_topics: Int
  judul: String
  created_by: Int
  is_grup: Boolean
  deskripsi: String
  content: String
}

type AuthResponse {
  token: String!
  user: User!
}
